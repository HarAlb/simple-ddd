openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://simple-api.local'
paths:
  /api/v1/admin/profile:
    get:
      summary: 'Get logined admin'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: JsonResponse
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Admin endpoints'
  /api/v1/admin/categories:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    email: example@gmail.com
                    name: example
                    surname: example
                properties:
                  data:
                    type: object
                    example:
                      email: example@gmail.com
                      name: example
                      surname: example
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Admin endpoints'
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/admin/auth/login:
    post:
      summary: 'Login admin'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiNjUwOWZlODQ3MzU1YTJkODM0YjU2NjQ2ZjIxMjAxZDBiZGQxMDc2Zjc0Y2Y1NTBiZGYyZjNmNTAxZDYyY2Q4NzI2YzcwMTQwMDVkZWU5ZWEiLCJpYXQiOjE2NTU5MjgzMzkuMzQwNDc0LCJuYmYiOjE2NTU5MjgzMzkuMzQwNDgsImV4cCI6MTY4NzQ2NDMzOS4zMDQzMjgsInN1YiI6IjEiLCJzY29wZXMiOltdfQ.kYOqYLIeiV61_FFGL7GMyUCl-7cwB6_AJvfNc8srN6GGzpIVDoEGMnWQINXPYIIBwQ0udpZI4Jb_1Rmal5u9x_IHJcswKTmDNX1BnXRp3MaEFoUouIc1g6qvMDSrm4WblgF6WDzE3OufdtxPIzrziKyvomnl3BSTjvpgqy-mIK-0wN3QUwXCB4GGjLTLc6rHyr52__mfM0qyCOAzx4ILv9iSXKH1KNK1hNIDf302KXE3JETJZ2CDifBJFiHGKxHbhPOXoQi-1bVmEKZD2l3wWlR68r2WLsohadW4rivAnQPKGWrTk9bjBkAh1Pz5P4D77RE4UpUgunomNoCWk0lkDbtyVxsgJaT_HC394yqggIYszFT0oy-0lmQPv6gpPfLsexn9Q2aabx2JZMarGCSthzXRSxcOcmNQZj1wRqcqK4IfW6VpUgMO1xteTx2Dpzw-k9PIAosUPwMeU7KlLTOKh9_XgTje7EsuUcmPS01kp6oLvfs06pLkwtlNAG2q37eycP3wLNY9M2H913XyVgNyT02bYczXbQHo6HK4HDmENDfhBIiwQ-O8f2Kg9tLF8aN-4a4RyZLyzFef0HeVYdEr08yuuDw654O8aGfpropy1wAvbk7LMOl75lNw7jdIESJLMn9o7kic-Pw2q9TipLP0Q-7R3DghEfU2FORdGVWgAPQ
                    user:
                      email: example@gmail.com
                      name: example
                      surname: emample
                properties:
                  data:
                    type: object
                    example:
                      token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiNjUwOWZlODQ3MzU1YTJkODM0YjU2NjQ2ZjIxMjAxZDBiZGQxMDc2Zjc0Y2Y1NTBiZGYyZjNmNTAxZDYyY2Q4NzI2YzcwMTQwMDVkZWU5ZWEiLCJpYXQiOjE2NTU5MjgzMzkuMzQwNDc0LCJuYmYiOjE2NTU5MjgzMzkuMzQwNDgsImV4cCI6MTY4NzQ2NDMzOS4zMDQzMjgsInN1YiI6IjEiLCJzY29wZXMiOltdfQ.kYOqYLIeiV61_FFGL7GMyUCl-7cwB6_AJvfNc8srN6GGzpIVDoEGMnWQINXPYIIBwQ0udpZI4Jb_1Rmal5u9x_IHJcswKTmDNX1BnXRp3MaEFoUouIc1g6qvMDSrm4WblgF6WDzE3OufdtxPIzrziKyvomnl3BSTjvpgqy-mIK-0wN3QUwXCB4GGjLTLc6rHyr52__mfM0qyCOAzx4ILv9iSXKH1KNK1hNIDf302KXE3JETJZ2CDifBJFiHGKxHbhPOXoQi-1bVmEKZD2l3wWlR68r2WLsohadW4rivAnQPKGWrTk9bjBkAh1Pz5P4D77RE4UpUgunomNoCWk0lkDbtyVxsgJaT_HC394yqggIYszFT0oy-0lmQPv6gpPfLsexn9Q2aabx2JZMarGCSthzXRSxcOcmNQZj1wRqcqK4IfW6VpUgMO1xteTx2Dpzw-k9PIAosUPwMeU7KlLTOKh9_XgTje7EsuUcmPS01kp6oLvfs06pLkwtlNAG2q37eycP3wLNY9M2H913XyVgNyT02bYczXbQHo6HK4HDmENDfhBIiwQ-O8f2Kg9tLF8aN-4a4RyZLyzFef0HeVYdEr08yuuDw654O8aGfpropy1wAvbk7LMOl75lNw7jdIESJLMn9o7kic-Pw2q9TipLP0Q-7R3DghEfU2FORdGVWgAPQ
                      user:
                        email: example@gmail.com
                        name: example
                        surname: emample
        422:
          description: 'Unprocessable Entity'
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    login:
                      - 'The email or password not correct.'
                properties:
                  errors:
                    type: object
                    example:
                      login:
                        - 'The email or password not correct.'
      tags:
        - 'Auth Admin endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: example@example.com
                password:
                  type: string
                  description: 'The password of the user.'
                  example: password
              required:
                - email
                - password
      security: []
  /api/v1/auth/login:
    post:
      summary: 'Login user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiNjUwOWZlODQ3MzU1YTJkODM0YjU2NjQ2ZjIxMjAxZDBiZGQxMDc2Zjc0Y2Y1NTBiZGYyZjNmNTAxZDYyY2Q4NzI2YzcwMTQwMDVkZWU5ZWEiLCJpYXQiOjE2NTU5MjgzMzkuMzQwNDc0LCJuYmYiOjE2NTU5MjgzMzkuMzQwNDgsImV4cCI6MTY4NzQ2NDMzOS4zMDQzMjgsInN1YiI6IjEiLCJzY29wZXMiOltdfQ.kYOqYLIeiV61_FFGL7GMyUCl-7cwB6_AJvfNc8srN6GGzpIVDoEGMnWQINXPYIIBwQ0udpZI4Jb_1Rmal5u9x_IHJcswKTmDNX1BnXRp3MaEFoUouIc1g6qvMDSrm4WblgF6WDzE3OufdtxPIzrziKyvomnl3BSTjvpgqy-mIK-0wN3QUwXCB4GGjLTLc6rHyr52__mfM0qyCOAzx4ILv9iSXKH1KNK1hNIDf302KXE3JETJZ2CDifBJFiHGKxHbhPOXoQi-1bVmEKZD2l3wWlR68r2WLsohadW4rivAnQPKGWrTk9bjBkAh1Pz5P4D77RE4UpUgunomNoCWk0lkDbtyVxsgJaT_HC394yqggIYszFT0oy-0lmQPv6gpPfLsexn9Q2aabx2JZMarGCSthzXRSxcOcmNQZj1wRqcqK4IfW6VpUgMO1xteTx2Dpzw-k9PIAosUPwMeU7KlLTOKh9_XgTje7EsuUcmPS01kp6oLvfs06pLkwtlNAG2q37eycP3wLNY9M2H913XyVgNyT02bYczXbQHo6HK4HDmENDfhBIiwQ-O8f2Kg9tLF8aN-4a4RyZLyzFef0HeVYdEr08yuuDw654O8aGfpropy1wAvbk7LMOl75lNw7jdIESJLMn9o7kic-Pw2q9TipLP0Q-7R3DghEfU2FORdGVWgAPQ
                    user:
                      email: example@gmail.com
                      nickname: example
                properties:
                  data:
                    type: object
                    example:
                      token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiNjUwOWZlODQ3MzU1YTJkODM0YjU2NjQ2ZjIxMjAxZDBiZGQxMDc2Zjc0Y2Y1NTBiZGYyZjNmNTAxZDYyY2Q4NzI2YzcwMTQwMDVkZWU5ZWEiLCJpYXQiOjE2NTU5MjgzMzkuMzQwNDc0LCJuYmYiOjE2NTU5MjgzMzkuMzQwNDgsImV4cCI6MTY4NzQ2NDMzOS4zMDQzMjgsInN1YiI6IjEiLCJzY29wZXMiOltdfQ.kYOqYLIeiV61_FFGL7GMyUCl-7cwB6_AJvfNc8srN6GGzpIVDoEGMnWQINXPYIIBwQ0udpZI4Jb_1Rmal5u9x_IHJcswKTmDNX1BnXRp3MaEFoUouIc1g6qvMDSrm4WblgF6WDzE3OufdtxPIzrziKyvomnl3BSTjvpgqy-mIK-0wN3QUwXCB4GGjLTLc6rHyr52__mfM0qyCOAzx4ILv9iSXKH1KNK1hNIDf302KXE3JETJZ2CDifBJFiHGKxHbhPOXoQi-1bVmEKZD2l3wWlR68r2WLsohadW4rivAnQPKGWrTk9bjBkAh1Pz5P4D77RE4UpUgunomNoCWk0lkDbtyVxsgJaT_HC394yqggIYszFT0oy-0lmQPv6gpPfLsexn9Q2aabx2JZMarGCSthzXRSxcOcmNQZj1wRqcqK4IfW6VpUgMO1xteTx2Dpzw-k9PIAosUPwMeU7KlLTOKh9_XgTje7EsuUcmPS01kp6oLvfs06pLkwtlNAG2q37eycP3wLNY9M2H913XyVgNyT02bYczXbQHo6HK4HDmENDfhBIiwQ-O8f2Kg9tLF8aN-4a4RyZLyzFef0HeVYdEr08yuuDw654O8aGfpropy1wAvbk7LMOl75lNw7jdIESJLMn9o7kic-Pw2q9TipLP0Q-7R3DghEfU2FORdGVWgAPQ
                      user:
                        email: example@gmail.com
                        nickname: example
        422:
          description: 'Unprocessable Entity'
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    login:
                      - 'The login or password is incorect.'
                properties:
                  errors:
                    type: object
                    example:
                      login:
                        - 'The login or password is incorect.'
      tags:
        - 'Auth endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'The login of the user.'
                  example: dasadsa
                password:
                  type: string
                  description: 'The password of the user.'
                  example: hash132
              required:
                - login
                - password
      security: []
  /api/v1/auth/register:
    post:
      summary: 'User register proccess'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiNjUwOWZlODQ3MzU1YTJkODM0YjU2NjQ2ZjIxMjAxZDBiZGQxMDc2Zjc0Y2Y1NTBiZGYyZjNmNTAxZDYyY2Q4NzI2YzcwMTQwMDVkZWU5ZWEiLCJpYXQiOjE2NTU5MjgzMzkuMzQwNDc0LCJuYmYiOjE2NTU5MjgzMzkuMzQwNDgsImV4cCI6MTY4NzQ2NDMzOS4zMDQzMjgsInN1YiI6IjEiLCJzY29wZXMiOltdfQ.kYOqYLIeiV61_FFGL7GMyUCl-7cwB6_AJvfNc8srN6GGzpIVDoEGMnWQINXPYIIBwQ0udpZI4Jb_1Rmal5u9x_IHJcswKTmDNX1BnXRp3MaEFoUouIc1g6qvMDSrm4WblgF6WDzE3OufdtxPIzrziKyvomnl3BSTjvpgqy-mIK-0wN3QUwXCB4GGjLTLc6rHyr52__mfM0qyCOAzx4ILv9iSXKH1KNK1hNIDf302KXE3JETJZ2CDifBJFiHGKxHbhPOXoQi-1bVmEKZD2l3wWlR68r2WLsohadW4rivAnQPKGWrTk9bjBkAh1Pz5P4D77RE4UpUgunomNoCWk0lkDbtyVxsgJaT_HC394yqggIYszFT0oy-0lmQPv6gpPfLsexn9Q2aabx2JZMarGCSthzXRSxcOcmNQZj1wRqcqK4IfW6VpUgMO1xteTx2Dpzw-k9PIAosUPwMeU7KlLTOKh9_XgTje7EsuUcmPS01kp6oLvfs06pLkwtlNAG2q37eycP3wLNY9M2H913XyVgNyT02bYczXbQHo6HK4HDmENDfhBIiwQ-O8f2Kg9tLF8aN-4a4RyZLyzFef0HeVYdEr08yuuDw654O8aGfpropy1wAvbk7LMOl75lNw7jdIESJLMn9o7kic-Pw2q9TipLP0Q-7R3DghEfU2FORdGVWgAPQ
                    user:
                      email: example@gmail.com
                      nickname: example
                properties:
                  data:
                    type: object
                    example:
                      token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiNjUwOWZlODQ3MzU1YTJkODM0YjU2NjQ2ZjIxMjAxZDBiZGQxMDc2Zjc0Y2Y1NTBiZGYyZjNmNTAxZDYyY2Q4NzI2YzcwMTQwMDVkZWU5ZWEiLCJpYXQiOjE2NTU5MjgzMzkuMzQwNDc0LCJuYmYiOjE2NTU5MjgzMzkuMzQwNDgsImV4cCI6MTY4NzQ2NDMzOS4zMDQzMjgsInN1YiI6IjEiLCJzY29wZXMiOltdfQ.kYOqYLIeiV61_FFGL7GMyUCl-7cwB6_AJvfNc8srN6GGzpIVDoEGMnWQINXPYIIBwQ0udpZI4Jb_1Rmal5u9x_IHJcswKTmDNX1BnXRp3MaEFoUouIc1g6qvMDSrm4WblgF6WDzE3OufdtxPIzrziKyvomnl3BSTjvpgqy-mIK-0wN3QUwXCB4GGjLTLc6rHyr52__mfM0qyCOAzx4ILv9iSXKH1KNK1hNIDf302KXE3JETJZ2CDifBJFiHGKxHbhPOXoQi-1bVmEKZD2l3wWlR68r2WLsohadW4rivAnQPKGWrTk9bjBkAh1Pz5P4D77RE4UpUgunomNoCWk0lkDbtyVxsgJaT_HC394yqggIYszFT0oy-0lmQPv6gpPfLsexn9Q2aabx2JZMarGCSthzXRSxcOcmNQZj1wRqcqK4IfW6VpUgMO1xteTx2Dpzw-k9PIAosUPwMeU7KlLTOKh9_XgTje7EsuUcmPS01kp6oLvfs06pLkwtlNAG2q37eycP3wLNY9M2H913XyVgNyT02bYczXbQHo6HK4HDmENDfhBIiwQ-O8f2Kg9tLF8aN-4a4RyZLyzFef0HeVYdEr08yuuDw654O8aGfpropy1wAvbk7LMOl75lNw7jdIESJLMn9o7kic-Pw2q9TipLP0Q-7R3DghEfU2FORdGVWgAPQ
                      user:
                        email: example@gmail.com
                        nickname: example
        422:
          description: 'Unprocessable Entity'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  errors:
                    email:
                      - 'The email field is required.'
                    nickname:
                      - 'The login or password is incorect.'
                    password:
                      - 'The password field is required.'
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
                      nickname:
                        - 'The login or password is incorect.'
                      password:
                        - 'The password field is required.'
      tags:
        - 'Auth endpoints'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: 'string.Example:'
                  description: asdw2
                  example: placeat
                email:
                  type: string
                  description: required.
                  example: asd@aaa.aaa
                password:
                  type: string
                  description: required.
                  example: 20122aaw
                password_confirmation:
                  type: string
                  description: required.
                  example: 20122aaw
      security: []
  /api/v1/profile:
    get:
      summary: 'Get logined user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: JsonResponse
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  '/api/v1/admin/categories/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 20
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Admin endpoints'
    description: ''
  -
    name: 'Auth Admin endpoints'
    description: ''
  -
    name: 'Auth endpoints'
    description: ''
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
